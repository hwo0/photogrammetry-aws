{"version":3,"file":"src/completePoller.js","mappings":"mnCAIA,kBACA,YAEA,SAEMA,EAAK,IAAIC,EAAIC,GAAG,CAAEC,WAAY,eAC9BC,EAAiB,IAAI,EAAAC,eACrBC,EAAyBC,QAAQC,IAAIC,iBACrCC,EAAiBH,QAAQC,IAAIE,OAC7BC,EAA2BJ,QAAQC,IAAIG,iBAE7CC,EAAQC,QAAiBC,GAAe,OAAD,6BACrC,IAAIC,EACJ,MAAMC,EAAa,CACjBC,UAAWX,EACXY,MAAO,GAEHC,QAAiBf,EAAegB,UAAUJ,GAEhD,GAAIG,GAAYA,EAASE,MAAO,CAE9B,GADAC,QAAQC,IAAIJ,KACRA,EAASK,MAAQ,GAMnB,YADAF,QAAQC,IAAI,4BAJZ,IAAK,MAAME,KAAUN,EAASE,MAC5BN,EAASU,EAAOV,M,CAQtBO,QAAQC,IAAI,UAAUR,KAEtB,MAAM,KAAEW,SAAe,UAAMC,IAC3B,UAAUjB,eAAoBK,UAKhC,GAFAO,QAAQC,IAAIG,GAEY,IAApBA,EAAKE,OAAOC,KAAY,CAE1BP,QAAQC,IAAI,UAAUR,cACtB,MAAMe,QAAiB,UAAMH,IAC3B,UAAUjB,eAAoBK,qBAC9B,CAAEgB,aAAc,WAGlBT,QAAQC,IAAIO,GAEZ,MAAME,QAAqB5B,EAAe6B,OAAO,CAAChB,UAAWX,EAAgB4B,IAAK,CAACnB,OAAQA,KAE3FO,QAAQC,IAAIS,GAEZ,MAAMG,EAAiC,CACrCC,OAAQzB,EACRuB,IAAK,UACLG,KAAMP,EAASJ,YAGX1B,EAAGsC,OAAOH,GAAcI,S,CAElC,G,+ZC7DA,eAEA,uBAGEC,cACEC,KAAKrC,eAAiB,IAAI,EAAAsC,SAASC,eAAe,CAChDC,oBAAoB,GAExB,CAEaC,IAAIC,G,yCAEf,OADAxB,QAAQC,IAAI,kCAAkCwB,KAAKC,UAAUF,YAChDL,KAAKrC,eAAeyC,IAAIC,GAAWP,SAClD,G,CAEaU,OAAOC,G,yCAKlB,OAJA5B,QAAQC,IACN,uCAAuCwB,KAAKC,UAAUE,YAG3CT,KAAKrC,eAAe6C,OAAOC,GAAcX,SACxD,G,CAEanB,UAAUJ,G,yCAErB,OADAM,QAAQC,IAAI,iCAAiCwB,KAAKC,UAAUhC,YAC/CyB,KAAKrC,eAAe+C,KAAKnC,GAAYuB,SACpD,G,CAEaa,WAAWC,G,yCAMtB,OALA/B,QAAQC,IACN,6CAA6CwB,KAAKC,UAAUK,aAEtCZ,KAAKrC,eAAekD,MAAMD,GAAad,WAE9ClB,MAAM,EACzB,G,CAEaY,OAAOsB,G,yCAIlB,OAHAjC,QAAQC,IACN,sCAAsCwB,KAAKC,UAAUO,YAE1Cd,KAAKrC,eAAe6B,OAAOsB,GAAchB,SACxD,G,YC/CFiB,EAAO5C,QAAU6C,QAAQ,U,UCAzBD,EAAO5C,QAAU6C,QAAQ,Q,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAalD,QAGrB,IAAI4C,EAASE,EAAyBG,GAAY,CAGjDjD,QAAS,CAAC,GAOX,OAHAoD,EAAoBH,GAAUI,KAAKT,EAAO5C,QAAS4C,EAAQA,EAAO5C,QAASgD,GAGpEJ,EAAO5C,OACf,CCnB0BgD,CAAoB,K","sources":["webpack://twinmaker-photogrammetry-pipeline/./src/completePoller.ts","webpack://twinmaker-photogrammetry-pipeline/./src/dynamoClient.ts","webpack://twinmaker-photogrammetry-pipeline/external commonjs \"aws-sdk\"","webpack://twinmaker-photogrammetry-pipeline/external commonjs \"axios\"","webpack://twinmaker-photogrammetry-pipeline/webpack/bootstrap","webpack://twinmaker-photogrammetry-pipeline/webpack/startup"],"sourcesContent":["/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: MIT-0\n * */\nimport axios from \"axios\";\nimport * as AWS from \"aws-sdk\";\nimport { PutObjectRequest } from \"aws-sdk/clients/s3\";\nimport { DynamoDbClient } from \"./dynamoClient\";\n\nconst s3 = new AWS.S3({ apiVersion: \"2006-03-01\" });\nconst dynamodbClient = new DynamoDbClient();\nconst taskTrackTable: string = process.env.TASK_TRACK_TABLE;\nconst LB_URL: string = process.env.LB_URL;\nconst PROCESSED_BUCKET: string = process.env.PROCESSED_BUCKET;\n\nexports.handler = async (event: any) => {\n  let taskId;\n  const scanParams = {\n    TableName: taskTrackTable,\n    Limit: 1\n  };\n  const scanData = await dynamodbClient.scanTable(scanParams);\n\n  if (scanData && scanData.Items) {\n    console.log(scanData);\n    if (scanData.Count > 0) {\n      for (const dbItem of scanData.Items) {\n        taskId = dbItem.taskId;\n      }\n    } else {\n      console.log('No task found, returning');\n      return;\n    }\n  }\n  \n  console.log(`TaskId ${taskId}`);\n\n  const { data } = await axios.get(\n    `http://${LB_URL}:3000/task/${taskId}/info`\n  );\n\n  console.log(data);\n\n  if (data.status.code == 40) {\n    //Complete\n    console.log(`TaskId ${taskId} complete`);\n    const response = await axios.get(\n      `http://${LB_URL}:3000/task/${taskId}/download/all.zip`,\n      { responseType: \"stream\" }\n    );\n\n    console.log(response);\n\n    const deleteResult = await dynamodbClient.delete({TableName: taskTrackTable, Key: {taskId: taskId}});\n\n    console.log(deleteResult);\n\n    const uploadParams: PutObjectRequest = {\n      Bucket: PROCESSED_BUCKET,\n      Key: \"all.zip\",\n      Body: response.data,\n    };\n\n    await s3.upload(uploadParams).promise();\n  }\n};\n","/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: MIT-0\n * */\nimport { DynamoDB } from \"aws-sdk\";\n\nexport class DynamoDbClient {\n  private dynamodbClient: DynamoDB.DocumentClient;\n\n  constructor() {\n    this.dynamodbClient = new DynamoDB.DocumentClient({\n      convertEmptyValues: true,\n    });\n  }\n\n  public async put(putParams: any) {\n    console.log(`put into dynamodb with params: ${JSON.stringify(putParams)}`);\n    return await this.dynamodbClient.put(putParams).promise();\n  }\n\n  public async update(updateParams: any) {\n    console.log(\n      `update a dynamodb item with params: ${JSON.stringify(updateParams)}`\n    );\n\n    return await this.dynamodbClient.update(updateParams).promise();\n  }\n\n  public async scanTable(scanParams: any) {\n    console.log(`scanning dynamodb with params ${JSON.stringify(scanParams)}`);\n    return await this.dynamodbClient.scan(scanParams).promise();\n  }\n\n  public async queryTable(queryParams: any) {\n    console.log(\n      `getting an item from dynamodb with params ${JSON.stringify(queryParams)}`\n    );\n    const queryData = await this.dynamodbClient.query(queryParams).promise();\n\n    return queryData.Items[0];\n  }\n\n  public async delete(deleteParams: any) {\n    console.log(\n      `deleting from dynamodb with params ${JSON.stringify(deleteParams)}`\n    );\n    return await this.dynamodbClient.delete(deleteParams).promise();\n  }\n}\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"axios\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(434);\n"],"names":["s3","AWS","S3","apiVersion","dynamodbClient","DynamoDbClient","taskTrackTable","process","env","TASK_TRACK_TABLE","LB_URL","PROCESSED_BUCKET","exports","handler","event","taskId","scanParams","TableName","Limit","scanData","scanTable","Items","console","log","Count","dbItem","data","get","status","code","response","responseType","deleteResult","delete","Key","uploadParams","Bucket","Body","upload","promise","constructor","this","DynamoDB","DocumentClient","convertEmptyValues","put","putParams","JSON","stringify","update","updateParams","scan","queryTable","queryParams","query","deleteParams","module","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}