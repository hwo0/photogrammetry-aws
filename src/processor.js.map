{"version":3,"file":"src/processor.js","mappings":"ubAIA,eAEA,uBAGEA,cACEC,KAAKC,eAAiB,IAAI,EAAAC,SAASC,eAAe,CAChDC,oBAAoB,GAExB,CAEaC,IAAIC,G,yCAEf,OADAC,QAAQC,IAAI,kCAAkCC,KAAKC,UAAUJ,YAChDN,KAAKC,eAAeI,IAAIC,GAAWK,SAClD,G,CAEaC,OAAOC,G,yCAKlB,OAJAN,QAAQC,IACN,uCAAuCC,KAAKC,UAAUG,YAG3Cb,KAAKC,eAAeW,OAAOC,GAAcF,SACxD,G,CAEaG,UAAUC,G,yCAErB,OADAR,QAAQC,IAAI,iCAAiCC,KAAKC,UAAUK,YAC/Cf,KAAKC,eAAee,KAAKD,GAAYJ,SACpD,G,CAEaM,WAAWC,G,yCAMtB,OALAX,QAAQC,IACN,6CAA6CC,KAAKC,UAAUQ,aAEtClB,KAAKC,eAAekB,MAAMD,GAAaP,WAE9CS,MAAM,EACzB,G,CAEaC,OAAOC,G,yCAIlB,OAHAf,QAAQC,IACN,sCAAsCC,KAAKC,UAAUY,YAE1CtB,KAAKC,eAAeoB,OAAOC,GAAcX,SACxD,G,mmDC3CF,kBACA,YACA,YACA,YACA,SACA,SAEMY,EAAK,IAAIC,EAAIC,GACbxB,EAAiB,IAAI,EAAAyB,eACrBC,EAAyBC,QAAQC,IAAIC,iBACrCC,EAAiBH,QAAQC,IAAIE,OAEnCC,EAAQC,QAAiBC,GAAe,OAAD,6B,QACrC3B,QAAQC,IAAI0B,GACZ,MAAMC,EAASP,QAAQC,IAAIO,eAKrBC,EAAS,CACbC,IALeC,mBACfL,EAAMM,QAAQ,GAAGjB,GAAGkB,OAAOC,IAAIC,QAAQ,MAAO,MAK9CC,OAAQT,GAGJU,EAAMtB,EACTuB,UAAUT,GACVU,mBACAC,KAAKC,EAASC,MAAM,CAAEC,aAAa,MAEhC,KAAEC,SAAe,UAAMC,KAC3B,UAAUtB,uBACV,CAAEuB,KAAM,SAAQ,aAChB,CAAEC,QAAS,CAAE,eAAgB,uCAG/BhD,QAAQC,IAAI4C,GACZ,MAAMI,EAASJ,EAAKK,WAEdxD,EAAeI,IAAI,CAACqD,UAAW/B,EAAgBgC,KAAM,CAACH,OAAQA,EAAQI,YAAY,K,IAExF,IAAsB,IAAG,EAAH,IAAAf,KAAG,yBAAd,MACHgB,EADU,QAGhB,GAAa,SADAA,EAAMC,KACE,CACnB,MAAMC,EAAYF,EAAMG,KACxBzD,QAAQC,IAAIuD,GACZ,MAAME,QAAiBJ,EAAMK,SACvBC,EAAO,IAAI,UACjBA,EAAKC,OAAO,SAAUH,EAAU,CAAEI,SAAUN,IAE5C,MAAM,KAAEX,EAAI,OAAEkB,SAAiB,UAAMjB,KACnC,UAAUtB,0BAA+ByB,IACzCW,EACA,CACEZ,QAAS,CAAE,eAAgB,qCAC3BgB,iBAAkBC,IAClBC,cAAeD,MAGnBjE,QAAQC,IAAI4C,E,CAEdS,EAAMa,W,2GAGR,MAAMC,QAAe,UAAMtB,KACzB,UAAUtB,0BAA+ByB,KAE3CjD,QAAQC,IAAImE,EACd,G,UCxEAC,EAAO5C,QAAU6C,QAAQ,U,UCAzBD,EAAO5C,QAAU6C,QAAQ,Q,UCAzBD,EAAO5C,QAAU6C,QAAQ,Y,UCAzBD,EAAO5C,QAAU6C,QAAQ,W,UCAzBD,EAAO5C,QAAU6C,QAAQ,O,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAalD,QAGrB,IAAI4C,EAASE,EAAyBG,GAAY,CAGjDjD,QAAS,CAAC,GAOX,OAHAoD,EAAoBH,GAAUI,KAAKT,EAAO5C,QAAS4C,EAAQA,EAAO5C,QAASgD,GAGpEJ,EAAO5C,OACf,CCnB0BgD,CAAoB,K","sources":["webpack://twinmaker-photogrammetry-pipeline/./src/dynamoClient.ts","webpack://twinmaker-photogrammetry-pipeline/./src/processor.ts","webpack://twinmaker-photogrammetry-pipeline/external commonjs \"aws-sdk\"","webpack://twinmaker-photogrammetry-pipeline/external commonjs \"axios\"","webpack://twinmaker-photogrammetry-pipeline/external commonjs \"form-data\"","webpack://twinmaker-photogrammetry-pipeline/external commonjs \"unzipper\"","webpack://twinmaker-photogrammetry-pipeline/external commonjs \"uuid\"","webpack://twinmaker-photogrammetry-pipeline/webpack/bootstrap","webpack://twinmaker-photogrammetry-pipeline/webpack/startup"],"sourcesContent":["/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: MIT-0\n * */\nimport { DynamoDB } from \"aws-sdk\";\n\nexport class DynamoDbClient {\n  private dynamodbClient: DynamoDB.DocumentClient;\n\n  constructor() {\n    this.dynamodbClient = new DynamoDB.DocumentClient({\n      convertEmptyValues: true,\n    });\n  }\n\n  public async put(putParams: any) {\n    console.log(`put into dynamodb with params: ${JSON.stringify(putParams)}`);\n    return await this.dynamodbClient.put(putParams).promise();\n  }\n\n  public async update(updateParams: any) {\n    console.log(\n      `update a dynamodb item with params: ${JSON.stringify(updateParams)}`\n    );\n\n    return await this.dynamodbClient.update(updateParams).promise();\n  }\n\n  public async scanTable(scanParams: any) {\n    console.log(`scanning dynamodb with params ${JSON.stringify(scanParams)}`);\n    return await this.dynamodbClient.scan(scanParams).promise();\n  }\n\n  public async queryTable(queryParams: any) {\n    console.log(\n      `getting an item from dynamodb with params ${JSON.stringify(queryParams)}`\n    );\n    const queryData = await this.dynamodbClient.query(queryParams).promise();\n\n    return queryData.Items[0];\n  }\n\n  public async delete(deleteParams: any) {\n    console.log(\n      `deleting from dynamodb with params ${JSON.stringify(deleteParams)}`\n    );\n    return await this.dynamodbClient.delete(deleteParams).promise();\n  }\n}\n","/**\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: MIT-0\n * */\nimport * as unzipper from \"unzipper\";\nimport * as AWS from \"aws-sdk\";\nimport axios from \"axios\";\nimport FormData from \"form-data\";\nimport { DynamoDbClient } from \"./dynamoClient\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst s3 = new AWS.S3();\nconst dynamodbClient = new DynamoDbClient();\nconst taskTrackTable: string = process.env.TASK_TRACK_TABLE;\nconst LB_URL: string = process.env.LB_URL;\n\nexports.handler = async (event: any) => {\n  console.log(event);\n  const bucket = process.env.LANDING_BUCKET;\n  const filename = decodeURIComponent(\n    event.Records[0].s3.object.key.replace(/\\+/g, \" \")\n  );\n\n  const params = {\n    Key: filename,\n    Bucket: bucket,\n  };\n\n  const zip = s3\n    .getObject(params)\n    .createReadStream()\n    .pipe(unzipper.Parse({ forceStream: true }));\n\n  const { data } = await axios.post(\n    `http://${LB_URL}:3000/task/new/init`,\n    { name: `Task-${uuidv4()}` },\n    { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\n  );\n\n  console.log(data);\n  const taskId = data.uuid;\n\n  await dynamodbClient.put({TableName: taskTrackTable, Item: {taskId: taskId, inProgress: true}});\n\n  for await (const e of zip) {\n    const entry = e;\n    const type = entry.type;\n    if (type === \"File\") {\n      const entryName = entry.path;\n      console.log(entryName);\n      const fileData = await entry.buffer();\n      const form = new FormData();\n      form.append(\"images\", fileData, { filename: entryName });\n\n      const { data, status } = await axios.post(\n        `http://${LB_URL}:3000/task/new/upload/${taskId}`,\n        form,\n        {\n          headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n          maxContentLength: Infinity,\n          maxBodyLength: Infinity,\n        }\n      );\n      console.log(data);\n    }\n    entry.autodrain();\n  }\n\n  const result = await axios.post(\n    `http://${LB_URL}:3000/task/new/commit/${taskId}`\n  );\n  console.log(result);\n};\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"axios\");","module.exports = require(\"form-data\");","module.exports = require(\"unzipper\");","module.exports = require(\"uuid\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(376);\n"],"names":["constructor","this","dynamodbClient","DynamoDB","DocumentClient","convertEmptyValues","put","putParams","console","log","JSON","stringify","promise","update","updateParams","scanTable","scanParams","scan","queryTable","queryParams","query","Items","delete","deleteParams","s3","AWS","S3","DynamoDbClient","taskTrackTable","process","env","TASK_TRACK_TABLE","LB_URL","exports","handler","event","bucket","LANDING_BUCKET","params","Key","decodeURIComponent","Records","object","key","replace","Bucket","zip","getObject","createReadStream","pipe","unzipper","Parse","forceStream","data","post","name","headers","taskId","uuid","TableName","Item","inProgress","entry","type","entryName","path","fileData","buffer","form","append","filename","status","maxContentLength","Infinity","maxBodyLength","autodrain","result","module","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}